{% extends "base-matrix.jinja" %}

{% block base_name %}Transpose{% endblock %}

{% block test_contents %}
func testEmptyTranspose() {
    var matrix = TestMatrix([[]])
    let beforeHash = hashOf(matrix)
    matrix.transpose()
    let afterHash = hashOf(matrix)
    XCTAssertEqual(beforeHash, afterHash)
}

func testEmptyTransposed() {
    let before = TestMatrix([[]])
    let beforeHash = hashOf(before)
    let after = before.transposed()
    let afterHash = hashOf(after)
    XCTAssertEqual(beforeHash, afterHash)
}

func testVectorTranspose() {
    var vector = [[1, 2, 3, 4]] as TestMatrix
    let beforeHash = hashOf(vector)
    vector.transpose()
    let afterHash = hashOf(vector)
    XCTAssertNotEqual(beforeHash, afterHash)
    XCTAssert(vector.isVector)
    XCTAssertEqual(vector.columnCount, 1)
    XCTAssertEqual(vector.rowCount, 4)
    XCTAssertEqual(vector.vector, [1, 2, 3, 4] as [Element])
}

func testVectorTransposed() {
    let before = [[1, 2, 3, 4]] as TestMatrix
    let after = before.transposed()
    XCTAssertNotEqual(before, after)
    XCTAssert(after.isVector)
    XCTAssertEqual(after.columnCount, before.rowCount)
    XCTAssertEqual(after.rowCount, before.columnCount)
    XCTAssertEqual(after.vector, before.vector)
}
{% endblock %}
